기능
-새로운 페이지 파일 불러올 때마다 제일 위로 다시 올라가기
-광고 위치 맨 아래로 수정
-전제척으로 print(f") 삭제

입출력
- str()은 변수와 데이터 타입에서 다룹니다. 를 사이즈 ### 으로 변경
- 마지막 입력값의 특징에 흔한 오류 아래로 싹 다 지워서 변수와 데이터 구조로 넘겨

변수와 데이터 타입
- 변수명 짓는 규칙에 이모티콘 삭제
- 데이터 타입에 복소수 삭제
- 불린형에서 True, False는 항상 첫글자가 대문자여야하는 특징 설명 추가
ex) 불린형에서 True, False는 항상 첫글자가 대문자여야합니다
- 정리 삭제

조건문
- 파이썬도 똑같이 할 수 있어요! -> 삭제

반복문 while
- print(f" 말고 그냥 변수 수셔넣는걸로 변경

리스트
- 리스트에 인덱스, 요소 관련된 설명 추가
- 인덱싱 설명 추가
- 주의사항 - 얕은 복사 삭제
- 인덱스와 값 함께 순회 - enumerate() 삭제
- 음의 인덱스 관련 다 삭제
- 여러 리스트 동시 순회 - zip()
-  2. 리스트 복사 주의 삭제

함수 설명 추가
- 함수란 뭔지 설명 및 특징
- 사용자 정의 함수 뭐시기~~
- 함수명 규칙
- 함수 설명
- 지역변수, 전역변수, 매개변수
- 함수에는 내장함수와 외장함수가 있다 내장함수는 라이브러리에서 모듈을 따로 불러오지 않아도 바로 사용할 수 있고 외장함수는 import문을 사용해서 불러와야 사용할 수 있다
- 시퀀스 설명
- 내장 함수 예시들 abs, chr,odd,int,float,str, len, list, max, min, sum
- 외장 함수 예시들 random, math, datetime
각 함수마다 예시 들기


버블 정렬
선택 정렬
삽입 정렬
순차 탐색
이진 탐색

각각 예시 및 코드 설명 자세히 초등학생도 알아먹게





----------------------------------------------------------------------

고급

변수
| 타입          | 설명              | 예시                     |
| ----------- | --------------- | ---------------------- |
| `list`      | 순서 있고 변경 가능한 목록 | `[1, 2, 3]`            |
| `tuple`     | 순서 있지만 변경 불가    | `(1, 2, 3)`            |
| `dict`      | 키-값 쌍 (딕셔너리)    | `{"name": "Alice"}`    |
| `set`       | 중복 없는 집합        | `{1, 2, 3}`            |
| `frozenset` | 불변 집합           | `frozenset([1, 2, 3])` |

None


입출력

end=""
sep="-"
print(f"")
print(,%d")

age = 20
print("나는 %d살입니다." % age)  # 출력: 나는 20살입니다.


name = "Alice"
age = 20
print("이름: {}, 나이: {}".format(name, age))
# 출력: 이름: Alice, 나이: 20


pi = 3.14159
print(f"{pi:.2f}")  # 소수점 둘째 자리까지: 3.14
print(f"{1000:,}")  # 1,000

파일 입출력

flush
import time
print("처리중...", end='', flush=True)
time.sleep(2)
print(" 완료")

data = [1, 2, 3]
print(*data)  # 출력: 1 2 3

print("줄바꿈\n탭\t따옴표\"")
# 출력:
# 줄바꿈
# 탭	따옴표"



문제

1. 다음 중 파이썬에 관한 설명을 옳은 것을 고르시오.
1. 파이썬은 컴파일러로 실행되는 언어이다
2. 파이썬은 순차적으로 실행되는 순차 구조이다
3. 파이썬에서 주석은 "//"로 사용된다
4. 파이썬은 다른 언어에 비해 배우기 어렵다
5. 파이썬은 라이브러리가 적어 사용하기 어렵다

2. 다음 중 파이썬의 특징으로 옳지 않은 것을 고르시오.
1. 들여쓰기를 통해 코드 블록을 구분한다
2. 변수 선언 시 자료형을 명시하지 않아도 된다
3. 인터프리터 방식으로 실행된다
4. 파이썬에서는 세미콜론(;)이 반드시 필요하다
5. 파이썬은 다양한 오픈소스 라이브러리를 지원한다

3. 다음 중 파이썬에서 올바른 변수 이름으로 사용할 수 있는 것은?
1. 1variable
2. my-variable
3. _value123
4. class
5. print()

4. 다음 중 파이썬의 출력 함수로 옳은 것은?
1. echo()
2. output()
3. println()
4. print()
5. show()

5. 다음 중 파이썬에서 리스트(List)에 해당하는 자료형을 모두 고르시오.
1. [1, 2, 3]
2. (1, 2, 3)
3. {"a": 1, "b": 2}
4.{ 1, 2, 3}
5. list("abc")

6. 다음 중 파이썬에서 조건문 if의 올바른 사용 예는?
1. if x == 10 then:
2. if (x == 10) { }
3. if x = 10:
4. if x == 10:
5. if x == 10

7. 다음 중 파이썬의 반복문 for 사용법으로 옳은 것은?
1. for (i = 0; i < 5; i++)
2. for i in range(5):
3. for i to 5 do
4. loop i from 1 to 5
5. foreach i in 5

8. 다음 중 while 문이 무한 루프를 발생시키는 예는?
1. while False:
2. while x > 10:
3. while True:
4. while x == 5:
5. while x != x:

9. 다음 중 파이썬의 range() 함수 설명으로 옳지 않은 것은?
1. range(5)는 0부터 4까지의 숫자를 생성한다
2. range(2, 6)은 2부터 5까지의 숫자를 생성한다
3. range(1, 10, 2)는 홀수만 생성할 수 있다
4. range()는 리스트를 직접 반환한다
5. range()는 반복문에서 자주 사용된다

10. 다음 중 type() 함수의 출력 결과로 옳은 것을 고르시오.
-----보기-----
x = 3.14  
-------------
print(type(x))
1. <class 'int'>
2. <class 'float'>
3. <class 'str'>
4. <class 'bool'>
5. <class 'list'>

11. 다음 중 if-else 구문의 올바른 예시는?
1.
if x > 10:
  print("크다")
else:
  print("작다")
2.
if x > 10
  then print("크다")
else
  print("작다")
3.
if x > 10:
  print("크다")
elif x < 5:
print("작다")
4.
if x > 10:
  print("크다")
else
  print("작다")
5. 
if (x > 10) {
print("크다") 
} else { 
print("작다") 
}

12. 다음 중 for문과 range를 이용하여 1부터 5까지 출력하는 코드로 옳은 것은?
1. 
for i in range(1, 6):
  print(i)
2. 
for i in range(5):
  print(i + 1)
3.
for i in range(0, 5):
  print(i + 1)
4. 위의 모든 보기
5. 위의 어느 것도 아님

13. 다음 중 while 문 사용 예로 옳지 않은 것은?
1. 
while x < 10:
  x += 1
2. 
while True: 
  break
3.
while x != 0:
  print(x);
  x -= 1
4. 
while x = 5:
  print(x)
5.
while not done: 
  continue

14. 다음 중 두 개의 값을 입력받아 정수로 변환하고 더한 결과를 출력하는 코드로 올바른 것은?
1. 
a = input(); 
b = input(); 
print(a + b)
2. 
a = int(input());
b = int(input());
print(a + b)
3.
a = input();
b = input();
print(int(a + b))
4. 
a = int(input());
b = input();
print(a + b)
5.
a = int(input());
b = int(input());
print(str(a + b))

15. 다음 중 print() 함수에서 출력 결과가 "Hello10"이 되는 코드는?
1. print("Hello" + 10)
2. print("Hello", 10)
3. print("Hello" + str(10))
4. print("Hello" + "10.0")
5. print("Hello" + float(10))

16. 다음 중 input() 함수로 입력받은 값을 실수(float)로 저장하는 코드로 옳은 것은?
1.x = input(float())
2. x = float(input())
3. x = str(input())
4. x = int(input())
5. x = float(input)

17. 다음 중 리스트 슬라이싱 결과가 [2, 3, 4]가 되는 코드는?
a = [1, 2, 3, 4, 5]

1. a[1:4]
2. a[2:5]
3. a[1:5]
4. a[2:4]
5. a[1:3]

18. 다음 중 while 문을 사용하여 1부터 5까지 출력하는 코드로 옳은 것은?
1.
i = 1  
while i <= 5:  
    print(i)  
    i += 1  
2.
i = 1  
while i < 5:  
    print(i)  
3.
i = 1  
while i <= 5  
    print(i)  
    i += 1  
3.
i = 0  
while i < 5:  
    print(i)  
    i += 1  
4.
while i <= 5:  
    print(i)  
    i += 1
5.
while i < 5
  print(i)
  i+=1

19. 다음 중 사용자 정의 함수의 올바른 선언과 호출 예는?
1.
function sayHi(): 
  print("Hi")
2.
def sayHi:
  print("Hi")
3.
def sayHi():
  print("Hi") — sayHi()
4. 
def sayHi():
  print("Hi") — call sayHi()
5. 
sayHi() = def():
  print("Hi")

20. 다음 중 type() 함수의 출력으로 맞는 것은?
-------보기------
x = "123"
print(type(x))
----------------
1. <class 'int'>
2. <class 'float'>
3. <class 'str'>
4. <class 'bool'>
5. <class 'list'>

2

4

3

4

1, 5

4

2

3

4

2

1

4

4

2

3

2

1

1

3

3

